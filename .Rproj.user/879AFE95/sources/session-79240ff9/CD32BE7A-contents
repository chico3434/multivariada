# Leitura dos dados

data(USArrests)
help(USArrests)
USArrests

# Assassinato, Assalto, Guerra Urbana, Estupro

#********************************************************************
# An?lise explorat?ria

summary(USArrests)
x11()
boxplot(USArrests)

x11()
plot(USArrests)

# vetor de m?dias
mean(USArrests)

# matriz de vari?ncia e covari?ncia
cov(USArrests)

#matriz de correla??o
cor(USArrests)

autovalores1<- eigen(cov(USArrests))

autovalores2<- eigen(cor(USArrests))



#********************************************************************
# Comando para componentes principais

# COMANDO PRCOMP
cp=prcomp(USArrests,scale=TRUE)  # utiliza a matriz de correla??o
cp1=prcomp(USArrests)                    # utiliza a matriz de covari?ncia como default

x11()
op <- par(mfrow = c(1,2))
plot(cp)
plot(cp1)
par(op)

summary(cp)

cp=cp$x

# como salvar o resultado ??????
#save(cp, file = "result.Rdata")

c1=cp[,1]
c2=cp[,2]
c3=cp[,3]
c4=cp[,4]

cor(cp)
x11()
plot(c1,c2)
x11()
plot(c1,c3)


# COMANDO PRINCOMP

(pc.cr <- princomp(USArrests))  # inappropriate

pc.cr1=princomp(USArrests, cor = TRUE) 

pc.cr1
summary(pc.cr1)
loadings(pc.cr1)
x11()
plot(pc.cr1)
x11()
biplot(pc.cr1)


## **************************************

###  Conjunto de dados de ?ris: fornece as medidas em cent?metros 
### das vari?veis: comprimento e largura da s?pala e comprimento 
### e largura da p?tala, respectivamente, para 150 flores de cada 
### uma das 3 esp?cies de ?ris. As esp?cies s?o Iris setosa, 
### versicolor e virginica.

### https://www.floresefolhagens.com.br/flor-de-iris/

# Leitura dos dados 
data(iris)
head(iris, 3)
diris=iris[,1:4]
(summary(diris))
(varian=var(diris))
boxplot(diris,col="magenta")
(correl=cor(diris))
plot(diris,col="red") 
(eigen(varian))
(eigen(correl))

m=ncol(diris)
n=nrow(diris)

# padroniza??o
padiris=scale(diris)
(varianp=var(padiris))
correl-varianp

# Outra transforma??o
minimo=min(diris)
maximo=max(diris)
tdiris=(diris-minimo)/(maximo-minimo)
(variant=var(tdiris))
eigen(variant)

## compara??o
par(mfrow=c(1,3))
boxplot(diris,col='magenta')
boxplot(padiris,col='blue')
boxplot(tdiris,col="red")

# COMANDO PRCOMP

(cp=prcomp(diris))           # utiliza a matriz de covari?ncia como default
(cp1=prcomp(diris,scale=TRUE))  # utiliza a matriz de correla??o
(cp2=prcomp(tdiris))

std_dev=cp$sdev
(pr_var=std_dev^2)

std_dev1=cp1$sdev
(pr_var1=std_dev1^2)

std_dev2=cp2$sdev
(pr_var2=std_dev2^2)

op <- par(mfrow = c(1,2))
plot(cp,col="red")
plot(cp1,col='blue')
par(op)

op <- par(mfrow = c(1,3))
plot(cp,col="red",type="l")
plot(cp1,col='blue',type="l")
plot(cp2,col='green',type="l")
par(op)

summary(cp)
summary(cp1)
summary(cp2)

# loadings
head(cp$rotation)
head(cp1$rotation)

escores=cp$x
head(escores)

y1=escores[,1]
y2=escores[,2]
y3=escores[,3]
y4=escores[,4]

cor(escores)
plot(y1,y2)
plot(y1,y3)

par(mfrow=c(2,2))
plot(y1, col=iris[,5])
plot(y2, col=iris[,5])
plot(y3, col=iris[,5])
plot(y4, col=iris[,5])

op <- par(mfrow = c(1,2))
biplot(cp, scale = 0)
biplot(cp1, scale = 0)
par(op)

#compute standard deviation of each principal component
(std_dev=cp1$sdev)

#compute variance
(pr_var=std_dev^2)

#proportion of variance explained
(prop_varex=pr_var/sum(pr_var))


#scree plot
op <- par(mfrow = c(1,2))
plot(prop_varex, xlab = "Componente Principal",
       ylab = "Propor??o de vari?ncia explicada",
       type = "b",col="red")

#cumulative scree plot
plot(cumsum(prop_varex), xlab = "Componente Principal",
       ylab = "Propor??o de vari?ncia explicada",
       type = "b",col="red")

### Visualiza??o dos resultados

install.packages("ggfortify")
library(ggfortify)
install.packages("ggplot2")
library(ggplot2)

autoplot(cp)
autoplot(cp1, data = iris, colour = 'Species')
autoplot(cp1, data = iris, colour = 'Species', label = TRUE, label.size = 3)
autoplot(cp1, data = iris, colour = 'Species', shape = FALSE, label.size = 5)
autoplot(cp1, data = iris, colour = 'Species', loadings = TRUE)
autoplot(cp1, data = iris, colour = 'Species',
         loadings = TRUE, loadings.colour = 'blue',
         loadings.label = TRUE, loadings.label.size = 3)



##### ************************************

# COMANDO PRINCOMP

(pc.cr <- princomp(USArrests))  # inappropriate

pc.cr1=princomp(USArrests, cor = TRUE) 

pc.cr1
summary(pc.cr1)
loadings(pc.cr1)
x11()
plot(pc.cr1)
x11()
biplot(pc.cr1)


# apply PCA - scale. = TRUE is highly 
# advisable, but default is FALSE. 
ir.pca <- prcomp(log.ir,
                 center = TRUE,
                 scale. = TRUE) 

print(ir.pca)
plot(ir.pca, type = "l")
summary(ir.pca)

predict(ir.pca, 
        newdata=tail(log.ir, 2))
library(devtools)
install_github("ggbiplot", "vqv")

library(ggbiplot)
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1, 
              groups = ir.species, ellipse = TRUE, 
              circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', 
               legend.position = 'top')
print(g)

require(caret)
trans = preProcess(iris[,1:4], 
                   method=c("BoxCox", "center", 
                            "scale", "pca"))
PC = predict(trans, iris[,1:4])
head(PC, 3)



# Loadings
trans$rotation


library(devtools)
install_github("vqv/ggbiplot")

  
  library(ggbiplot)

ggbiplot(mtcars.pca)
ggbiplot(mtcars.pca, labels=rownames(mtcars))
