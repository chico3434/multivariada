data(iris)
head(iris, 3)
iris[iris$Species == 'setosa']
View(iris)
iris[iris$Species == 'setosa',]
diris=iris[,1:4]
iris$Species
diris=iris[,1:4]
View(diris)
(summary(diris))
(varian=var(diris))
varian
# padronização
padiris=scale(diris)
(varianp=var(padiris))
correl-varianp
(cp=prcomp(diris))           # utiliza a matriz de covari?ncia como default
(cp1=prcomp(diris,scale=TRUE))  # utiliza a matriz de correla??o
(cp2=prcomp(tdiris))
# Outra transforma??o
minimo=min(diris)
maximo=max(diris)
tdiris=(diris-minimo)/(maximo-minimo)
(variant=var(tdiris))
eigen(variant)
(cp2=prcomp(tdiris))
std_dev=cp$sdev
(pr_var=std_dev^2)
std_dev1=cp1$sdev
(pr_var1=std_dev1^2)
std_dev2=cp2$sdev
(pr_var2=std_dev2^2)
op <- par(mfrow = c(1,2))
plot(cp,col="red")
plot(cp1,col='blue')
par(op)
op <- par(mfrow = c(1,3))
plot(cp,col="red",type="l")
plot(cp1,col='blue',type="l")
plot(cp2,col='green',type="l")
par(op)
summary(cp)
summary(cp1)
summary(cp2)
# loadings
head(cp$rotation)
head(cp1$rotation)
escores=cp$x
head(escores)
y1=escores[,1]
y2=escores[,2]
y3=escores[,3]
y4=escores[,4]
data(iris)
library(stats)
iris_num <- iris[, 1:4]
iris_std <- scale(iris_num)
data(iris)
library(stats)
iris_num <- iris[, 1:4]
iris_std <- scale(iris_num)
pca_iris <- prcomp(iris_std, center = TRUE, scale. = TRUE)
head(iris)
tail(iris)
summary(pca_iris)
pca_iris$sdev^2
prop_var <- (pca_iris$sdev^2) / sum(pca_iris$sdev^2)
(correl=cor(diris))
cor(iris_num)
var(diris)
var(iris_num)
library(ggplot2)
pca_scores <- as.data.frame(pca_iris$x)
pca_scores$Species <- iris$Species
ggplot(pca_scores, aes(x = PC1, y = PC2, color = Species)) +
geom_point() +
labs(title = "PCA da Base de Dados Iris",
x = "Componente Principal 1",
y = "Componente Principal 2")
diris=iris[,1:4]
(summary(diris))
(varian=var(diris))
boxplot(diris,col="magenta")
boxplot(diris,col="magenta")
boxplot(diris,col="magenta")
plot(diris,col="red")
boxplot(diris,col="magenta")
boxplot(diris,col="cyan")
(correl=cor(diris))
plot(diris,col="red")
data(iris)
head(iris, 3)
diris=iris[,1:4]
(summary(diris))
(varian=var(diris))
boxplot(diris,col="cyan")
(correl=cor(diris))
plot(diris,col="red")
(eigen(varian))
(eigen(correl))
(eigen(varian))
(auto <- eigen(varian))
auto$values
auto$values[1]
auto$values[1]/sum(auto$values)
# padronização
padiris=scale(diris)
(varianp=var(padiris))
boxplot(diris,col='magenta')
auto$values[1]/sum(auto$values)
auto$values[1:4]/sum(auto$values)
sum(auto$values[1:2]/sum(auto$values))
# padroniza??o
padiris=scale(diris)
(varianp=var(padiris))
correl-varianp
# Outra transforma??o
minimo=min(diris)
maximo=max(diris)
tdiris=(diris-minimo)/(maximo-minimo)
(variant=var(tdiris))
eigen(variant)
## compara??o
par(mfrow=c(1,3))
boxplot(diris,col='magenta')
boxplot(padiris,col='blue')
boxplot(tdiris,col="red")
(cp=prcomp(diris))           # utiliza a matriz de covari?ncia como default
(cp1=prcomp(diris,scale=TRUE))  # utiliza a matriz de correla??o
(cp2=prcomp(tdiris))
std_dev=cp$sdev
(pr_var=std_dev^2)
std_dev1=cp1$sdev
(pr_var1=std_dev1^2)
std_dev2=cp2$sdev
(pr_var2=std_dev2^2)
op <- par(mfrow = c(1,2))
plot(cp,col="red")
plot(cp1,col='blue')
par(op)
op <- par(mfrow = c(1,3))
plot(cp,col="red",type="l")
plot(cp1,col='blue',type="l")
plot(cp2,col='green',type="l")
summary(cp)
summary(cp1)
summary(cp2)
boxplot(padiris,col='blue')
(cp=prcomp(diris))           # utiliza a matriz de covari?ncia como default
cp$rotation
cp$rotation[1,]
(cp3=prcomp(padiris))
cp3$sdev^2
plot(cp3,col='blue')
summary(cp3)
data(iris)
library(stats)
iris_num <- iris[,1:4]
iris_std <- scale(iris_num)
pca_iris <- prcomp(iris_std, center = TRUE, scale. = TRUE)
summary(pca_iris)
pca_iris$sdev^2
prop_var <- (pca_iris$sdev^2) / sum(pca_iris$sdev^2)
auto$values[1:4]/sum(auto$values)
summary(cp)
(cp1=prcomp(diris,scale=TRUE))  # utiliza a matriz de correla??o
pca_iris
summary(cp1)
summary(pca_iris)
summary(cp)
boxplot(diris,col='magenta')
boxplot(padiris,col='blue')
correl-varianp
correl
var(padiris)
correl-varianp
cor(padiris)
(auto <- eigen(correl))
autov$values[1:4]/sum(autov$values)
(autov <- eigen(varian))
(autoc <- eigen(correl))
autov$values[1:4]/sum(autov$values)
autoc$values[1:4]/sum(autoc$values)
## comparação
par(mfrow=c(1,3))
boxplot(diris,col='magenta')
boxplot(padiris,col='blue')
boxplot(tdiris,col="red")
boxplot(diris,col='magenta')
boxplot(tdiris,col="red")
boxplot(padiris,col='blue')
data(iris)
head(iris, 3)
diris=iris[,1:4]
(summary(diris))
boxplot(diris,col="cyan")
hist(diris)
hist(diris$Petal.Length)
(cp=prcomp(diris)) # sem padronização (usa matriz de covariância)
(cp1=prcomp(diris,scale=TRUE)) # com padronização (usa matriz de correlação)
View(iris)
summary(cp)
summary(cp1)
summary(cp)
summary(cp)
summary(cp1)
summary(cp)
summary(cp1)
plot(cp,col="red")
plot(cp1,col='blue')
par(mfrow=c(1,2))
plot(cp,col="red")
